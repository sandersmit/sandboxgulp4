.gridContainer2 {
  display: flex;
  flex-wrap: wrap;
  max-width: 1280px;
  padding-top: 15px;
  padding-bottom: 15px;
  margin: auto; }
  .gridContainer2 h2 {
    display: block;
    width: 100%;
    text-align: center;
    padding-bottom: 35px;
    font-weight: 200; }
  .gridContainer2 .blockholder {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: 100%; }
    .gridContainer2 .blockholder a {
      display: flex;
      flex-wrap: wrap;
      flex: 0 0 66.66667%;
      max-width: 66.66667%;
      padding: 0px;
      min-height: 200px;
      justify-content: center; }
      @media (min-width: 768px) {
        .gridContainer2 .blockholder a {
          flex: 0 0 33.33333%;
          max-width: 33.33333%; } }
      .gridContainer2 .blockholder a .item {
        display: block;
        width: 100%;
        background-color: #25a1a9;
        margin: 5px;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center; }
        .gridContainer2 .blockholder a .item .itemheader {
          opacity: 0;
          display: none; }
          .gridContainer2 .blockholder a .item .itemheader h3 {
            color: green; }
        .gridContainer2 .blockholder a .item .itemimg {
          padding: 50px; }
          .gridContainer2 .blockholder a .item .itemimg img {
            width: 100%;
            height: 100%;
            object-fit: contain; }
            @media (min-width: 768px) {
              .gridContainer2 .blockholder a .item .itemimg img {
                padding: 0px; } }
      .gridContainer2 .blockholder a:hover .item {
        background-color: #3c4354; }
        .gridContainer2 .blockholder a:hover .item .itemheader {
          opacity: 1;
          display: block; }
          .gridContainer2 .blockholder a:hover .item .itemheader h3 {
            color: green; }

.container {
  display: flex;
  flex-wrap: wrap;
  max-width: 1024px;
  padding-top: 15px;
  padding-bottom: 15px; }

.gridContainer {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-auto-rows: 160px;
  border: solid 2px green;
  max-width: 1280px;
  margin: auto;
  column-gap: 5px; }
  @media (min-width: 768px) {
    .gridContainer {
      border: solid 2px yellow;
      grid-template-columns: repeat(8, 1fr);
      grid-auto-rows: minmax(100px, auto);
      grid-auto-rows: 160px; } }
  .gridContainer article.block {
    display: grid;
    column-gap: 5px;
    row-gap: 5px;
    margin-bottom: 5px; }
  .gridContainer article.primary {
    grid-column-start: 1;
    grid-column-end: 7;
    grid-row-start: 2;
    grid-row-end: 4;
    justify-self: center;
    grid-auto-rows: minmax(160px, auto);
    display: grid;
    grid-template-columns: repeat(2, 1fr); }
    @media (min-width: 768px) {
      .gridContainer article.primary {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 2;
        grid-row-end: 4;
        grid-auto-rows: minmax(100px, auto);
        justify-self: end; } }
  .gridContainer article.secondary {
    grid-column-start: 1;
    grid-column-end: 7;
    grid-row-start: 4;
    grid-row-end: 8;
    justify-self: center;
    grid-auto-rows: minmax(160px, auto);
    display: grid;
    grid-template-columns: repeat(2, 1fr); }
    @media (min-width: 768px) {
      .gridContainer article.secondary {
        grid-column-start: 4;
        grid-column-end: 7; } }
  .gridContainer article.tertiary {
    grid-column-start: 1;
    grid-column-end: 7;
    grid-row-start: 8;
    grid-row-end: 12;
    display: grid;
    grid-template-columns: repeat(2, 1fr); }
    @media (min-width: 768px) {
      .gridContainer article.tertiary {
        grid-column-start: 7;
        grid-column-end: 8;
        grid-row-start: 2;
        grid-row-end: 4; } }
  .gridContainer article.quaternary {
    grid-column-start: 1;
    grid-column-end: 7;
    grid-row-start: 12;
    grid-row-end: 16;
    grid-template-columns: repeat(2, 1fr);
    display: grid; }
    @media (min-width: 768px) {
      .gridContainer article.quaternary {
        grid-column-start: 4;
        grid-column-end: 7;
        grid-template-columns: repeat(4, 1fr); } }
  .gridContainer article .item {
    background-color: #fb5a2c;
    transform: scale(0, 0);
    transition: transform;
    transition-duration: 0.2s;
    transition-timing-function: ease-in;
    transition-delay: 0s; }
    .gridContainer article .item img {
      width: 100%;
      height: 100%;
      object-fit: contain; }
    .gridContainer article .item.show {
      transform: scale(1, 1); }
    .gridContainer article .item:hover {
      transform: scale(1.3, 1.3);
      box-shadow: 10px 10px 44px grey; }

.box2 {
  flex: 0 0 50%;
  max-width: 50%;
  padding: 15px;
  max-height: 300px;
  height: auto;
  color: white;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column; }
  .box2 article {
    max-height: 300px;
    height: auto;
    background: #303644;
    display: flex;
    flex-wrap: wrap; }
    .box2 article.first {
      cursor: pointer;
      background-color: green;
      display: flex;
      justify-content: center;
      border: solid 3px orange; }
      .box2 article.first img {
        width: 100%;
        height: auto;
        padding: 10px; }
      .box2 article.first div {
        border: solid 2px white;
        flex: 0 0 25%;
        max-width: 25%;
        position: relative;
        align-self: center;
        left: calc(0%); }
        .box2 article.first div img {
          width: 100%;
          padding: 10px; }
      .box2 article.first div + div {
        position: relative;
        flex: 0 0 75%;
        max-width: 75%;
        border: solid 1px white; }
        .box2 article.first div + div quote {
          opacity: 0; }
    .box2 article.second {
      color: black;
      position: relative;
      background: #fff;
      z-index: 1;
      height: 0px; }
      .box2 article.second .magicbox {
        display: none;
        background-color: #fff;
        height: 150px;
        position: absolute;
        border: solid 2px green;
        justify-content: center; }
        .box2 article.second .magicbox:before {
          position: absolute;
          display: block;
          width: 30px;
          height: 30px;
          content: "";
          margin-left: calc(50% - 20px);
          width: 0;
          height: 0;
          border-left: 20px solid transparent;
          border-right: 20px solid transparent;
          border-top: 20px solid #303644; }
        .box2 article.second .magicbox div {
          border: solid 1px pink;
          align-self: center; }
          .box2 article.second .magicbox div img {
            width: 100px;
            padding: 10px; }
        .box2 article.second .magicbox div + div {
          display: flex;
          flex-wrap: wrap;
          border: solid 1px yellow; }
          .box2 article.second .magicbox div + div img {
            flex: 0 0 16.66667%;
            max-width: 16.66667%;
            align-self: center; }
          .box2 article.second .magicbox div + div a {
            flex: 0 0 75%;
            max-width: 75%;
            align-self: center; }

html {
  font-size: 100%;
  font-family: "Helvetica", "arial", "Times", sans-serif; }

body {
  margin: 0px auto 0px auto; }

@font-face {
  font-family: 'titilliumweb-regular-webfont';
  src: url("../fonts/titilliumweb-regular.woff2") format("woff2"), url("../fonts/titilliumweb-regular.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'titilliumweb-light-webfont';
  src: url("../fonts/titilliumweb-light.woff2") format("woff2"), url("../fonts/titilliumweb-light.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'titilliumweb-bold-webfont';
  src: url("../fonts/titilliumweb-bold.woff2") format("woff2"), url("../fonts/titilliumweb-bold.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'titilliumweb-semibold-webfont';
  src: url("../fonts/titilliumweb-semibold.woff2") format("woff2"), url("../fonts/titilliumweb-semibold.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

.container {
  display: flex;
  flex-wrap: wrap;
  max-width: 1024px;
  background-color: orange;
  min-height: 500px; }

.box {
  flex: 0 0 33.33333%;
  max-width: 33.33333%;
  position: relative;
  max-height: 300px;
  background-color: #3c4354; }
  .box article {
    position: relative;
    display: block; }
    .box article.first {
      padding: 0px;
      margin: 0px;
      border: 1 red solid;
      background-color: #119799;
      z-index: 1;
      display: block;
      position: absolute; }
      .box article.first img {
        padding: 0px;
        margin: 0px;
        border: 0;
        width: 100%;
        height: auto; }
    .box article.second {
      display: flex;
      padding: 0px;
      margin: 0px;
      border: 0;
      z-index: 0; }
      .box article.second q {
        font-size: 25px;
        color: #fff; }
  .box:hover .first {
    opacity: 0; }
  .box:hover .second {
    opacity: 1; }

.top {
  background-image: url("../img/top.png");
  background-position: center;
  height: 652px;
  margin: auto;
  background-repeat: no-repeat;
  position: absolute;
  width: 100%;
  top: -3px; }

.bottom {
  background-image: url("../img/site/bottom.png");
  background-position: center;
  height: 544px;
  margin: auto; }
  .bottom .tidy {
    position: absolute;
    width: 0px;
    display: none;
    border: solid; }

.demoblock {
  clear: both;
  display: flex;
  flex-wrap: wrap;
  max-width: 1024px;
  margin-top: 235px; }
  .demoblock .demoblockleft {
    justify-content: left;
    width: 66%;
    margin-left: 0;
    float: left; }

.gridContainer2 {
  clear: both;
  display: flex;
  flex-wrap: wrap;
  max-width: 1024px;
  padding-top: 15px;
  padding-bottom: 110px;
  margin: auto; }
  .gridContainer2 h2 {
    font-family: 'titilliumweb-light-webfont';
    -webkit-font-smoothing: antialiased !important;
    display: block;
    width: 100%;
    text-align: center;
    padding-bottom: 55px;
    padding-left: 25px;
    padding-right: 25px;
    font-weight: normal;
    font-style: normal;
    font-size: 1.5em; }
    @media screen and (min-width: 768px) {
      .gridContainer2 h2 {
        font-size: 2em; } }
  .gridContainer2 .blockholder {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: 100%; }
    .gridContainer2 .blockholder.slider, .gridContainer2 .blockholder.slider2 {
      overflow: hidden;
      flex: 0 0 83.33333%;
      max-width: 83.33333%;
      margin: auto; }
      @media screen and (min-width: 480px) {
        .gridContainer2 .blockholder.slider, .gridContainer2 .blockholder.slider2 {
          flex: 0 0 100%;
          max-width: 100%; } }
      @media screen and (min-width: 768px) {
        .gridContainer2 .blockholder.slider, .gridContainer2 .blockholder.slider2 {
          flex: 0 0 100%;
          max-width: 100%; } }
      @media screen and (min-width: 768px) {
        .gridContainer2 .blockholder.slider.slider2, .gridContainer2 .blockholder.slider2.slider2 {
          flex: 0 0 100%;
          max-width: 100%;
          margin-top: -100px; } }
      .gridContainer2 .blockholder.slider .sliderwrap, .gridContainer2 .blockholder.slider2 .sliderwrap {
        display: flex;
        position: relative;
        width: 100%;
        max-width: 100%;
        flex-basis: 100%; }
        .gridContainer2 .blockholder.slider .sliderwrap a, .gridContainer2 .blockholder.slider2 .sliderwrap a {
          width: 100%;
          max-width: 100%;
          flex-basis: 100%; }
          @media screen and (min-width: 480px) {
            .gridContainer2 .blockholder.slider .sliderwrap a, .gridContainer2 .blockholder.slider2 .sliderwrap a {
              flex: 0 0 50%;
              max-width: 50%; }
              .gridContainer2 .blockholder.slider .sliderwrap a.new, .gridContainer2 .blockholder.slider2 .sliderwrap a.new {
                flex: 0 0 100%;
                max-width: 100%; } }
          @media screen and (min-width: 768px) {
            .gridContainer2 .blockholder.slider .sliderwrap a, .gridContainer2 .blockholder.slider2 .sliderwrap a {
              flex: 0 0 33.33333%;
              max-width: 33.33333%; }
              .gridContainer2 .blockholder.slider .sliderwrap a.new, .gridContainer2 .blockholder.slider2 .sliderwrap a.new {
                flex: 0 0 100%;
                max-width: 100%; } }
          .gridContainer2 .blockholder.slider .sliderwrap a .itemimg, .gridContainer2 .blockholder.slider2 .sliderwrap a .itemimg {
            padding: 0px; }
            @media screen and (min-width: 768px) {
              .gridContainer2 .blockholder.slider .sliderwrap a .itemimg, .gridContainer2 .blockholder.slider2 .sliderwrap a .itemimg {
                padding: 0px; } }
            .gridContainer2 .blockholder.slider .sliderwrap a .itemimg img, .gridContainer2 .blockholder.slider2 .sliderwrap a .itemimg img {
              width: 45%;
              padding: 50px; }
              @media screen and (min-width: 320px) {
                .gridContainer2 .blockholder.slider .sliderwrap a .itemimg img, .gridContainer2 .blockholder.slider2 .sliderwrap a .itemimg img {
                  width: 70%;
                  padding: 32px 0px; } }
              @media screen and (min-width: 480px) {
                .gridContainer2 .blockholder.slider .sliderwrap a .itemimg img, .gridContainer2 .blockholder.slider2 .sliderwrap a .itemimg img {
                  width: 100%;
                  padding: 50px; } }
              @media screen and (min-width: 768px) {
                .gridContainer2 .blockholder.slider .sliderwrap a .itemimg img, .gridContainer2 .blockholder.slider2 .sliderwrap a .itemimg img {
                  padding: 50px; } }
      .gridContainer2 .blockholder.slider:hover .navLeft,
      .gridContainer2 .blockholder.slider:hover .navLeft2,
      .gridContainer2 .blockholder.slider:hover .navRight,
      .gridContainer2 .blockholder.slider:hover .navRight2, .gridContainer2 .blockholder.slider2:hover .navLeft,
      .gridContainer2 .blockholder.slider2:hover .navLeft2,
      .gridContainer2 .blockholder.slider2:hover .navRight,
      .gridContainer2 .blockholder.slider2:hover .navRight2 {
        opacity: 1; }
      .gridContainer2 .blockholder.slider:hover .navLeft, .gridContainer2 .blockholder.slider:hover .navLeft2, .gridContainer2 .blockholder.slider2:hover .navLeft, .gridContainer2 .blockholder.slider2:hover .navLeft2 {
        left: 0px; }
      .gridContainer2 .blockholder.slider:hover .navRight, .gridContainer2 .blockholder.slider:hover .navRight2, .gridContainer2 .blockholder.slider2:hover .navRight, .gridContainer2 .blockholder.slider2:hover .navRight2 {
        right: 0px; }
      .gridContainer2 .blockholder.slider .navLeft,
      .gridContainer2 .blockholder.slider .navRight,
      .gridContainer2 .blockholder.slider .navRight2,
      .gridContainer2 .blockholder.slider .navLeft2, .gridContainer2 .blockholder.slider2 .navLeft,
      .gridContainer2 .blockholder.slider2 .navRight,
      .gridContainer2 .blockholder.slider2 .navRight2,
      .gridContainer2 .blockholder.slider2 .navLeft2 {
        align-self: center;
        display: flex;
        /* Center vertically */
        align-items: center;
        width: 50px;
        height: 400px;
        min-height: 220px;
        position: absolute;
        z-index: 3;
        opacity: 1; }
        @media screen and (min-width: 1200px) {
          .gridContainer2 .blockholder.slider .navLeft,
          .gridContainer2 .blockholder.slider .navRight,
          .gridContainer2 .blockholder.slider .navRight2,
          .gridContainer2 .blockholder.slider .navLeft2, .gridContainer2 .blockholder.slider2 .navLeft,
          .gridContainer2 .blockholder.slider2 .navRight,
          .gridContainer2 .blockholder.slider2 .navRight2,
          .gridContainer2 .blockholder.slider2 .navLeft2 {
            opacity: 0.5; } }
        .gridContainer2 .blockholder.slider .navLeft a.vorige,
        .gridContainer2 .blockholder.slider .navLeft a.volgende,
        .gridContainer2 .blockholder.slider .navLeft a.volgende2,
        .gridContainer2 .blockholder.slider .navLeft a.vorige2,
        .gridContainer2 .blockholder.slider .navRight a.vorige,
        .gridContainer2 .blockholder.slider .navRight a.volgende,
        .gridContainer2 .blockholder.slider .navRight a.volgende2,
        .gridContainer2 .blockholder.slider .navRight a.vorige2,
        .gridContainer2 .blockholder.slider .navRight2 a.vorige,
        .gridContainer2 .blockholder.slider .navRight2 a.volgende,
        .gridContainer2 .blockholder.slider .navRight2 a.volgende2,
        .gridContainer2 .blockholder.slider .navRight2 a.vorige2,
        .gridContainer2 .blockholder.slider .navLeft2 a.vorige,
        .gridContainer2 .blockholder.slider .navLeft2 a.volgende,
        .gridContainer2 .blockholder.slider .navLeft2 a.volgende2,
        .gridContainer2 .blockholder.slider .navLeft2 a.vorige2, .gridContainer2 .blockholder.slider2 .navLeft a.vorige,
        .gridContainer2 .blockholder.slider2 .navLeft a.volgende,
        .gridContainer2 .blockholder.slider2 .navLeft a.volgende2,
        .gridContainer2 .blockholder.slider2 .navLeft a.vorige2,
        .gridContainer2 .blockholder.slider2 .navRight a.vorige,
        .gridContainer2 .blockholder.slider2 .navRight a.volgende,
        .gridContainer2 .blockholder.slider2 .navRight a.volgende2,
        .gridContainer2 .blockholder.slider2 .navRight a.vorige2,
        .gridContainer2 .blockholder.slider2 .navRight2 a.vorige,
        .gridContainer2 .blockholder.slider2 .navRight2 a.volgende,
        .gridContainer2 .blockholder.slider2 .navRight2 a.volgende2,
        .gridContainer2 .blockholder.slider2 .navRight2 a.vorige2,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende2,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige2 {
          cursor: pointer;
          margin: auto;
          border: solid #3C4353;
          border-width: 0 10px 10px 0;
          display: inline-block;
          padding: 12px;
          position: absolute;
          z-index: 3;
          align-self: center;
          background: none;
          min-height: 10px;
          max-height: 10px;
          height: 10px;
          opacity: 0.5; }
          .gridContainer2 .blockholder.slider .navLeft a.vorige:hover,
          .gridContainer2 .blockholder.slider .navLeft a.volgende:hover,
          .gridContainer2 .blockholder.slider .navLeft a.volgende2:hover,
          .gridContainer2 .blockholder.slider .navLeft a.vorige2:hover,
          .gridContainer2 .blockholder.slider .navRight a.vorige:hover,
          .gridContainer2 .blockholder.slider .navRight a.volgende:hover,
          .gridContainer2 .blockholder.slider .navRight a.volgende2:hover,
          .gridContainer2 .blockholder.slider .navRight a.vorige2:hover,
          .gridContainer2 .blockholder.slider .navRight2 a.vorige:hover,
          .gridContainer2 .blockholder.slider .navRight2 a.volgende:hover,
          .gridContainer2 .blockholder.slider .navRight2 a.volgende2:hover,
          .gridContainer2 .blockholder.slider .navRight2 a.vorige2:hover,
          .gridContainer2 .blockholder.slider .navLeft2 a.vorige:hover,
          .gridContainer2 .blockholder.slider .navLeft2 a.volgende:hover,
          .gridContainer2 .blockholder.slider .navLeft2 a.volgende2:hover,
          .gridContainer2 .blockholder.slider .navLeft2 a.vorige2:hover, .gridContainer2 .blockholder.slider2 .navLeft a.vorige:hover,
          .gridContainer2 .blockholder.slider2 .navLeft a.volgende:hover,
          .gridContainer2 .blockholder.slider2 .navLeft a.volgende2:hover,
          .gridContainer2 .blockholder.slider2 .navLeft a.vorige2:hover,
          .gridContainer2 .blockholder.slider2 .navRight a.vorige:hover,
          .gridContainer2 .blockholder.slider2 .navRight a.volgende:hover,
          .gridContainer2 .blockholder.slider2 .navRight a.volgende2:hover,
          .gridContainer2 .blockholder.slider2 .navRight a.vorige2:hover,
          .gridContainer2 .blockholder.slider2 .navRight2 a.vorige:hover,
          .gridContainer2 .blockholder.slider2 .navRight2 a.volgende:hover,
          .gridContainer2 .blockholder.slider2 .navRight2 a.volgende2:hover,
          .gridContainer2 .blockholder.slider2 .navRight2 a.vorige2:hover,
          .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige:hover,
          .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende:hover,
          .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende2:hover,
          .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige2:hover {
            opacity: 1;
            border-color: #3C4353; }
        .gridContainer2 .blockholder.slider .navLeft a.vorige,
        .gridContainer2 .blockholder.slider .navLeft a.vorige2,
        .gridContainer2 .blockholder.slider .navRight a.vorige,
        .gridContainer2 .blockholder.slider .navRight a.vorige2,
        .gridContainer2 .blockholder.slider .navRight2 a.vorige,
        .gridContainer2 .blockholder.slider .navRight2 a.vorige2,
        .gridContainer2 .blockholder.slider .navLeft2 a.vorige,
        .gridContainer2 .blockholder.slider .navLeft2 a.vorige2, .gridContainer2 .blockholder.slider2 .navLeft a.vorige,
        .gridContainer2 .blockholder.slider2 .navLeft a.vorige2,
        .gridContainer2 .blockholder.slider2 .navRight a.vorige,
        .gridContainer2 .blockholder.slider2 .navRight a.vorige2,
        .gridContainer2 .blockholder.slider2 .navRight2 a.vorige,
        .gridContainer2 .blockholder.slider2 .navRight2 a.vorige2,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige2 {
          left: 25px;
          -webkit-transform: rotate(136deg);
          -ms-transform: rotate(136deg); }
          @media screen and (min-width: 768px) {
            .gridContainer2 .blockholder.slider .navLeft a.vorige,
            .gridContainer2 .blockholder.slider .navLeft a.vorige2,
            .gridContainer2 .blockholder.slider .navRight a.vorige,
            .gridContainer2 .blockholder.slider .navRight a.vorige2,
            .gridContainer2 .blockholder.slider .navRight2 a.vorige,
            .gridContainer2 .blockholder.slider .navRight2 a.vorige2,
            .gridContainer2 .blockholder.slider .navLeft2 a.vorige,
            .gridContainer2 .blockholder.slider .navLeft2 a.vorige2, .gridContainer2 .blockholder.slider2 .navLeft a.vorige,
            .gridContainer2 .blockholder.slider2 .navLeft a.vorige2,
            .gridContainer2 .blockholder.slider2 .navRight a.vorige,
            .gridContainer2 .blockholder.slider2 .navRight a.vorige2,
            .gridContainer2 .blockholder.slider2 .navRight2 a.vorige,
            .gridContainer2 .blockholder.slider2 .navRight2 a.vorige2,
            .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige,
            .gridContainer2 .blockholder.slider2 .navLeft2 a.vorige2 {
              left: 10px; } }
        .gridContainer2 .blockholder.slider .navLeft a.volgende,
        .gridContainer2 .blockholder.slider .navLeft a.volgende2,
        .gridContainer2 .blockholder.slider .navRight a.volgende,
        .gridContainer2 .blockholder.slider .navRight a.volgende2,
        .gridContainer2 .blockholder.slider .navRight2 a.volgende,
        .gridContainer2 .blockholder.slider .navRight2 a.volgende2,
        .gridContainer2 .blockholder.slider .navLeft2 a.volgende,
        .gridContainer2 .blockholder.slider .navLeft2 a.volgende2, .gridContainer2 .blockholder.slider2 .navLeft a.volgende,
        .gridContainer2 .blockholder.slider2 .navLeft a.volgende2,
        .gridContainer2 .blockholder.slider2 .navRight a.volgende,
        .gridContainer2 .blockholder.slider2 .navRight a.volgende2,
        .gridContainer2 .blockholder.slider2 .navRight2 a.volgende,
        .gridContainer2 .blockholder.slider2 .navRight2 a.volgende2,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende,
        .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende2 {
          right: 25px;
          -webkit-transform: rotate(-46deg);
          -ms-transform: rotate(-46deg); }
          @media screen and (min-width: 768px) {
            .gridContainer2 .blockholder.slider .navLeft a.volgende,
            .gridContainer2 .blockholder.slider .navLeft a.volgende2,
            .gridContainer2 .blockholder.slider .navRight a.volgende,
            .gridContainer2 .blockholder.slider .navRight a.volgende2,
            .gridContainer2 .blockholder.slider .navRight2 a.volgende,
            .gridContainer2 .blockholder.slider .navRight2 a.volgende2,
            .gridContainer2 .blockholder.slider .navLeft2 a.volgende,
            .gridContainer2 .blockholder.slider .navLeft2 a.volgende2, .gridContainer2 .blockholder.slider2 .navLeft a.volgende,
            .gridContainer2 .blockholder.slider2 .navLeft a.volgende2,
            .gridContainer2 .blockholder.slider2 .navRight a.volgende,
            .gridContainer2 .blockholder.slider2 .navRight a.volgende2,
            .gridContainer2 .blockholder.slider2 .navRight2 a.volgende,
            .gridContainer2 .blockholder.slider2 .navRight2 a.volgende2,
            .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende,
            .gridContainer2 .blockholder.slider2 .navLeft2 a.volgende2 {
              right: 10px; } }
      .gridContainer2 .blockholder.slider .navLeft, .gridContainer2 .blockholder.slider .navLeft2, .gridContainer2 .blockholder.slider2 .navLeft, .gridContainer2 .blockholder.slider2 .navLeft2 {
        -webkit-transition: left 0.5s;
        transition: left 0.5s;
        left: 0px; }
      .gridContainer2 .blockholder.slider .navRight, .gridContainer2 .blockholder.slider2 .navRight {
        -webkit-transition: right 0.5s;
        transition: right 0.5s;
        right: 0px; }
    .gridContainer2 .blockholder a {
      position: relative;
      display: flex;
      flex-wrap: wrap;
      flex: 0 0 83.33333%;
      max-width: 83.33333%;
      padding: 0px;
      min-height: 200px;
      justify-content: center; }
      .gridContainer2 .blockholder a:hover {
        text-decoration: none; }
        .gridContainer2 .blockholder a:hover .item.review, .gridContainer2 .blockholder a:hover .item.testimon {
          transform: scale(1.05);
          background-color: #3c4354;
          box-shadow: 0px 0px 10px #000000;
          z-index: 2; }
          .gridContainer2 .blockholder a:hover .item.review .itemheader, .gridContainer2 .blockholder a:hover .item.testimon .itemheader {
            opacity: 1;
            display: block; }
          .gridContainer2 .blockholder a:hover .item.review .itemimg, .gridContainer2 .blockholder a:hover .item.testimon .itemimg {
            opacity: 0;
            display: block; }
        .gridContainer2 .blockholder a:hover .item.normal {
          cursor: default;
          z-index: 2;
          background-color: #25a1a9;
          box-shadow: none; }
          .gridContainer2 .blockholder a:hover .item.normal .itemheader {
            opacity: 0;
            display: none; }
          .gridContainer2 .blockholder a:hover .item.normal .itemimg {
            opacity: 1;
            display: block; }
      @media screen and (min-width: 480px) {
        .gridContainer2 .blockholder a {
          flex: 0 0 50%;
          max-width: 50%; } }
      @media screen and (min-width: 768px) {
        .gridContainer2 .blockholder a {
          flex: 0 0 33.33333%;
          max-width: 33.33333%; } }
      .gridContainer2 .blockholder a .item {
        -webkit-transition: transform 0.5s;
        transition: transform 0.5s;
        width: 100%;
        background-color: #25a1a9;
        margin: 5px;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        transform: scale(1);
        position: relative;
        z-index: 1; }
        .gridContainer2 .blockholder a .item .itemheader {
          -webkit-transition: opacity 1s;
          transition: opacity 1s;
          opacity: 0;
          text-align: center;
          position: absolute;
          align-self: center;
          top: calc(50%);
          -ms-transform: translateY(-50%);
          transform: translateY(-50%); }
          .gridContainer2 .blockholder a .item .itemheader q,
          .gridContainer2 .blockholder a .item .itemheader p {
            font-family: 'titilliumweb-light-webfont';
            font-weight: normal;
            color: #fff;
            font-size: 12px;
            display: block;
            font-size: 0.8em;
            padding: 20px 20px 0px 20px; }
            .gridContainer2 .blockholder a .item .itemheader q:hover,
            .gridContainer2 .blockholder a .item .itemheader p:hover {
              color: red; }
          @media screen and (min-width: 992px) {
            .gridContainer2 .blockholder a .item .itemheader {
              font-size: 1em; } }
        .gridContainer2 .blockholder a .item img {
          width: 100px;
          height: auto;
          border-radius: 100%; }
          .gridContainer2 .blockholder a .item img.person {
            -webkit-filter: none; }
        .gridContainer2 .blockholder a .item .itemimg {
          -webkit-transition: opacity 0.5s;
          transition: opacity 0.5s;
          position: relative;
          opacity: 1;
          padding: 50px;
          width: 100%; }
          .gridContainer2 .blockholder a .item .itemimg img {
            width: 100%;
            height: auto;
            object-fit: contain; }
            @media screen and (min-width: 768px) {
              .gridContainer2 .blockholder a .item .itemimg img {
                padding: 0px; } }
        .gridContainer2 .blockholder a .item.testimon .itemheader q {
          padding: 20px 20px 0px 20px;
          font-size: 0.8em; }
          @media screen and (min-width: 992px) {
            .gridContainer2 .blockholder a .item.testimon .itemheader q {
              padding: 20px 0px;
              font-size: 1em; } }
        .gridContainer2 .blockholder a .item.testimon .itemheader p {
          padding: 0px;
          margin: 0px;
          font-size: 0.8em; }
          @media screen and (min-width: 992px) {
            .gridContainer2 .blockholder a .item.testimon .itemheader p {
              font-size: 1em; } }
        .gridContainer2 .blockholder a .item.testimon .itemheader figure {
          margin: 0px; }
          @media screen and (min-width: 768px) {
            .gridContainer2 .blockholder a .item.testimon .itemheader figure {
              margin: 0; } }
          .gridContainer2 .blockholder a .item.testimon .itemheader figure img {
            padding: 15px 0px;
            width: 80px;
            border: 1px solid #3c4354;
            border-radius: 100%; }
            @media screen and (min-width: 480px) {
              .gridContainer2 .blockholder a .item.testimon .itemheader figure img {
                padding: 20px 0px; } }
            @media screen and (min-width: 992px) {
              .gridContainer2 .blockholder a .item.testimon .itemheader figure img {
                width: 100px; } }
        .gridContainer2 .blockholder a .item.testimon .itemheader h6 {
          color: #E84424;
          padding: 0px;
          font-size: 0.8em; }
          @media screen and (min-width: 768px) {
            .gridContainer2 .blockholder a .item.testimon .itemheader h6 {
              margin: auto; } }
        .gridContainer2 .blockholder a .item.review .itemheader img {
          -webkit-filter: brightness(0%) saturate(100%) invert(16%) sepia(93%) saturate(6447%); }
          .gridContainer2 .blockholder a .item.review .itemheader img.ie11 {
            display: none;
            visibility: hidden; }
        .IE11 .gridContainer2 .blockholder a .item.review .itemheader img {
          display: none; }
          .IE11 .gridContainer2 .blockholder a .item.review .itemheader img.ie11 {
            visibility: visible;
            display: block;
            margin: auto;
            width: 50px;
            margin-top: 10px;
            height: auto; }
        .gridContainer2 .blockholder a .item.open {
          transform: scale(1.05);
          background-color: #3c4354;
          box-shadow: 0px 0px 10px #000000;
          z-index: 2; }
          .gridContainer2 .blockholder a .item.open .itemheader {
            opacity: 1;
            display: block; }
          .gridContainer2 .blockholder a .item.open .itemimg {
            opacity: 0;
            display: block; }
    .mobile .gridContainer2 .blockholder .item.review, .mobile .gridContainer2 .blockholder .item.testimon {
      background-color: #3c4354;
      box-shadow: none;
      z-index: 2; }
      .mobile .gridContainer2 .blockholder .item.review .itemheader, .mobile .gridContainer2 .blockholder .item.testimon .itemheader {
        opacity: 1;
        display: block; }
      .mobile .gridContainer2 .blockholder .item.review .itemimg, .mobile .gridContainer2 .blockholder .item.testimon .itemimg {
        opacity: 0;
        display: block; }

.boilerplate {
  margin-top: -5px; }

.demoblock {
  clear: both;
  display: flex;
  flex-wrap: wrap;
  max-width: 1024px;
  margin: auto;
  margin-top: 235px; }
  .demoblock .demoblockleft {
    justify-content: left;
    width: 66%;
    margin-left: 0;
    float: left; }
    .demoblock .demoblockleft .quoteblock {
      min-height: 350px; }

.quoteblock {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
  z-index: 0;
  position: relative;
  width: 100%;
  padding-top: 80px;
  min-height: 400px;
  margin: auto;
  padding: 0px;
  padding: 25px; }
  .quoteblock .overlay {
    position: absolute;
    background-color: black;
    width: 100%;
    height: 100%;
    display: block;
    z-index: -1;
    top: 0px;
    left: 0px;
    opacity: 0.5; }
    .new4 .quoteblock .overlay {
      background-color: transparent;
      opacity: 0.3;
      background-image: linear-gradient(to right, black, rgba(255, 255, 255, 0.5)); }
  .new1 .quoteblock {
    border: solid 0px #3c4354;
    background-image: url("../img/back1.jpeg");
    background-repeat: no-repeat;
    background-size: cover;
    background-position: left center; }
    .new1 .quoteblock.slide {
      background-image: none;
      background-color: red; }
  .new2 .quoteblock {
    background-image: url("../img/persoon2.png");
    background-position: top right; }
  .new3 .quoteblock {
    background-image: url("../img/persoon4.png");
    background-position: top right; }
  .new4 .quoteblock {
    background-image: url("../img/persoon4.png");
    background-position: top right; }
  @media screen and (min-width: 768px) {
    .quoteblock {
      padding: 65px; }
      .new1 .quoteblock {
        padding-right: 30%; }
      .demoblockleft .quoteblock {
        padding-right: 65px; } }
  .quoteblock ul {
    margin: 0px;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    max-width: 1024px;
    justify-content: center;
    padding: 0px; }
    .new3 .quoteblock ul {
      padding-left: 0px;
      margin-left: 0px;
      left: 0px;
      display: block; }
    .quoteblock ul li {
      margin-top: 0px;
      display: flex;
      text-align: center;
      flex: 0 0 100%;
      max-width: 100%; }
      @media screen and (min-width: 768px) {
        .quoteblock ul li {
          text-align: left; } }
      .quoteblock ul li img {
        width: 70px;
        height: auto;
        border-radius: 100%;
        display: block;
        align-self: center;
        margin: auto; }
        @media screen and (min-width: 992px) {
          .quoteblock ul li img {
            width: 100px; }
            .demoblockleft .quoteblock ul li img {
              width: 80px; } }
      .quoteblock ul li .textBack {
        padding-left: 25px; }
        .new2 .quoteblock ul li .textBack {
          margin: auto; }
      .quoteblock ul li q {
        width: 100%;
        padding: 25px;
        display: block;
        color: #25a1a9;
        -webkit-font-smoothing: antialiased !important;
        font-family: 'titilliumweb-light-webfont';
        font-weight: normal;
        font-size: 18px; }
        .new1 .quoteblock ul li q {
          color: #fff; }
        .new2 .quoteblock ul li q {
          background-color: rgba(37, 161, 169, 0.4);
          display: inline;
          padding: 5px;
          line-height: 46px; }
        .new3 .quoteblock ul li q {
          padding-left: 0px;
          margin-left: 0px; }
        @media screen and (min-width: 768px) {
          .quoteblock ul li q {
            font-size: 20px;
            padding: 20px; } }
        @media screen and (min-width: 992px) {
          .quoteblock ul li q {
            font-size: 25px; } }
      .quoteblock ul li:last-child {
        flex: 0 0 100%;
        max-width: 100%; }
      @media screen and (min-width: 768px) {
        .quoteblock ul li {
          flex: 0 0 16.66667%;
          max-width: 16.66667%; }
          .quoteblock ul li:last-child {
            flex: 0 0 83.33333%;
            max-width: 83.33333%; } }

.quoteblockTop {
  text-align: center;
  padding: 0px 0px;
  font-size: 1.7em; }
  @media screen and (min-width: 768px) {
    .quoteblockTop {
      text-align: left; } }
  .quoteblockTop h5,
  .quoteblockTop h6 {
    -webkit-font-smoothing: antialiased !important;
    font-family: 'titilliumweb-bold-webfont';
    font-family: 'titilliumweb-regular-webfont';
    display: block; }
    .new1 .quoteblockTop h5, .new1
    .quoteblockTop h6 {
      color: #fff; }
    @media screen and (min-width: 768px) {
      .quoteblockTop h5,
      .quoteblockTop h6 {
        display: inline-block; } }
  .quoteblockTop h5 {
    margin-top: 0px;
    color: #E84424;
    padding: 0px 5px;
    font-size: 1.1em; }
    @media screen and (min-width: 768px) {
      .quoteblockTop h5 {
        margin-top: 10px; } }
    .new2 .quoteblockTop h5 {
      color: #E84424; }
  .quoteblockTop h6 {
    margin-bottom: 0px;
    color: #3c4353;
    font-size: 1.1em; }
    @media screen and (min-width: 768px) {
      .quoteblockTop h6 {
        margin-bottom: 15px; } }

.quoteblockBottom {
  text-align: center;
  padding: 0px 25px; }
  @media screen and (min-width: 768px) {
    .quoteblockBottom {
      text-align: right; }
      .new3 .quoteblockBottom {
        text-align: left;
        padding-left: 0px; } }
  .quoteblockBottom h5,
  .quoteblockBottom h6 {
    -webkit-font-smoothing: antialiased !important;
    font-family: 'titilliumweb-bold-webfont';
    display: inline-block; }
    .new1 .quoteblockBottom h5, .new1
    .quoteblockBottom h6 {
      color: #fff; }
  .quoteblockBottom h5 {
    color: #E84424;
    padding: 0px 0px 0px 10px;
    font-size: 1.1em; }
    .new2 .quoteblockBottom h5 {
      color: #E84424; }
  .quoteblockBottom h6 {
    color: #25a1a9;
    font-size: 1em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
